{
    "identifier": "works.creativecode.python-nova",
    "name": "Python",
    "organization": "CreativeCodeWorks",
    "description": "Full featured Python Plugin for Nova, supports Jedi Autocomplete, PyFlakes, PyLint, YAPF, Rope, McCabe and lots more.",
    "version": "1.0.3",
    "license": "MIT",
    "categories": [
        "languages"
    ],
    "main": "main.js",
    "bugs": "https://github.com/mmshivesh/Python-Nova.novaextension/issues",
    "repository": "https://github.com/mmshivesh/Python-Nova.novaextension",
    "entitlements": {
        "process": true,
        "filesystem": "readonly"
    },
    "configWorkspace": [
        {
            "key":"pyls.plugins.jedi.workspace.environment",
            "title": "Workspace Jedi Environment Path",
            "type": "path",
            "description": "Jedi Environment override for the given workspace"
        }
    ],
    "config": [
        {   
            "title": "Basic Options",
            "description": "Basic PyLS configutation options",
            "type": "section",
            "key": "works.creativecode.pyls.optionsSec",
            "children": [
                {
                    "key":"pyls.executable",
                    "title": "Executable Path",
                    "type": "path",
                    "placeholder": "/usr/local/bin/pyls",
                    "description": "Language server executable"
                },
                {
                    "key": "pyls.enableLogging",
                    "type": "boolean",
                    "title": "Enable Logging",
                    "description": "Enable logging for PyLS"
                },
                {
                    "key": "pyls.logPath",
                    "type": "path",
                    "title": "Path to PyLS log File",
                    "placeholder": "/tmp/pyls.log",
                    "description": "PyLS log path"
                },
                {
                    "key": "pyls.configurationSources",
                    "title": "Configuration Sources",
                    "type": "enum",
                    "values": ["pycodestyle", "pyflakes"],
                    "default": "pycodestyle",
                    "description": "List of configuration sources to use."
                }
            ]
        },
        {
            "title": "Enable Modules",
            "description": "Quickly Enable or disable PyLS modules",
            "type": "section",
            "key": "works.creativecode.pyls.modulesSec",
            "children": [
                {
                    
                    "key": "pyls.plugins.jedi.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi",
                    "default": true,
                    "description": "Enable or disable the Base Jedi plugin."
                },
                {
                    "key": "pyls.plugins.jedi_completion.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi Completion",
                    "default": true,
                    "description": "Enable or disable the Jedi Completion plugin."
                },
                {
                    "key": "pyls.plugins.jedi_definition.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi Definition",
                    "default": true,
                    "description": "Enable or disable the Jedi Definition plugin."
                },
                {
                    "key": "pyls.plugins.jedi_hover.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi Hover",
                    "default": true,
                    "description": "Enable or disable the Jedi Hover plugin."
                },
                {
                    "key": "pyls.plugins.jedi_references.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi References",
                    "default": true,
                    "description": "Enable or disable the Jedi References plugin."
                },
                {
                    "key": "pyls.plugins.jedi_signature_help.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi Signature Help",
                    "default": true,
                    "description": "Enable or disable the Jedi function signature help plugin."
                },
                {
                    "key": "pyls.plugins.jedi_symbols.enabled",
                    "type": "boolean",
                    "title": "Enable Jedi Symbols",
                    "default": true,
                    "description": "Enable or disable the Jedi symbols plugin."
                },
                {
                    "key": "pyls.plugins.preload.enabled",
                    "type": "boolean",
                    "title": "Enable Preload",
                    "default": true,
                    "description": "Enable or disable preload module plugin."
                },
                {
                    "key": "pyls.plugins.rope_completion.enabled",
                    "type": "boolean",
                    "title": "Enable Rope Completion",
                    "default": false,
                    "description": "Enable or disable the Rope based completion plugin."
                },
                {
                    "key": "pyls.plugins.yapf.enabled",
                    "type": "boolean",
                    "title": "Enable YAPF",
                    "default": true,
                    "description": "Enable or disable the YAPF plugin."
                },
                {
                    "key": "pyls.plugins.mccabe.enabled",
                    "type": "boolean",
                    "title": "Enable McCabe",
                    "default": true,
                    "description": "Enable or disable the McCabe plugin."
                },
                {
                    "key": "pyls.plugins.pydocstyle.enabled",
                    "type": "boolean",
                    "title": "Enable PyDocStyle",
                    "default": false,
                    "description": "Enable or disable the PyDocStyle plugin."
                },
                {
                    "key": "pyls.plugins.pycodestyle.enabled",
                    "type": "boolean",
                    "title": "Enable PyCodeStyle",
                    "default": true,
                    "description": "Enable or disable the PyCodeStyle plugin."
                },
                {
                    "key": "pyls.plugins.pyflakes.enabled",
                    "type": "boolean",
                    "title": "Enable PyFlakes",
                    "default": true,
                    "description": "Enable or disable the PyFlakes plugin."
                },
                {
                    "key": "pyls.plugins.pylint.enabled",
                    "type": "boolean",
                    "title": "Enable PyLint",
                    "default": false,
                    "description": "Enable or disable the PyLint plugin."
                }
            ]
        },
        {
            "title": "Module Options",
            "description": "Options for PyLS modules.",
            "type": "section",
            "key": "works.creativecode.pylint.codeStyleCat",
            "children": [
                {
                    "title": "Jedi",
                    "type": "section",
                    "key": "works.creativecode.pyls.jediOptionsSec",
                    "children": [
                        {
                            "key": "pyls.plugins.jedi.extra_paths",
                            "title": "Extra Paths",
                            "type": "string",
                            "default": null,
                            "placeholder":"<path-1>, <path-2>, ...",
                            "description": "Define extra paths for jedi.Script. (Comma separated paths)"
                        },
                        {
                            "key": "pyls.plugins.jedi.env_vars",
                            "title": "Environment Variables",
                            "type": "text",
                            "default": null,
                            "value": "{ \"env\": \"value\"}",
                            "description": "Define environment variables for jedi.Script and Jedi.names."
                        },
                        {
                            "key": "pyls.plugins.jedi.environment",
                            "title": "Environment",
                            "type": "string",
                            "default": null,
                            "description": "Define environment for jedi.Script and Jedi.names."
                        }
                    ]
                },
                {
                    "title": "Jedi Completion",
                    "type": "section",
                    "key": "works.creativecode.pyls.jediCompletionSec",
                    "children": [
                        {
                            "key": "pyls.plugins.jedi_completion.include_params",
                            "type": "boolean",
                            "title": "Include Function and Class Parameters",
                            "default": false,
                            "description": "Auto-completes methods and classes with tabstops for each parameter. (Disabled by default because of a bug in Nova v1.2. Check README for more details.)"
                        },
                        {
                            "key": "pyls.plugins.jedi_completion.include_class_objects",
                            "type": "boolean",
                            "title": "Separate Class Objects in Completion",
                            "default": true,
                            "description": "Adds class objects as a separate completion item."
                        },
                        {
                            "key": "pyls.plugins.jedi_completion.fuzzy",
                            "type": "boolean",
                            "title": "Enable Fuzzy auto-completion",
                            "default": true,
                            "description": "Enable fuzzy searching when requesting autocomplete."
                        }
                    ]
                },
                {
                    "title": "Jedi Definition",
                    "type": "section",
                    "key": "works.creativecode.pyls.jediDefinitionSec",
                    "children": [
                        {
                            "key": "pyls.plugins.jedi_definition.follow_imports",
                            "type": "boolean",
                            "default": true,
                            "title": "Follow Imports",
                            "description": "The goto call will follow imports."
                        },
                        {
                            "key": "pyls.plugins.jedi_definition.follow_builtin_imports",
                            "type": "boolean",
                            "default": true,
                            "title": "Follow Built-in Imports",
                            "description": "If follow_imports is True will decide if it follow builtin imports."
                        }
                    ]
                },
                {
                    "title": "Jedi Symbols",
                    "type": "section",
                    "key": "works.creativecode.pyls.jediSymbolsSec",
                    "children": [
                        {
                            "key": "pyls.plugins.jedi_symbols.all_scopes",
                            "type": "boolean",
                            "title": "Enable All Scopes",
                            "default": true,
                            "description": "If True lists the names of all scopes instead of only the module namespace."
                        }
                    ]
                },
                {
                    "title": "McCabe",
                    "type": "section",
                    "key": "works.creativecode.pyls.McCabeSec",
                    "children": [
                        {
                            "key": "pyls.plugins.mccabe.threshold",
                            "title": "Threshold",
                            "type": "number",
                            "default": 15,
                            "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                        }
                    ]
                },
                {
                    "title": "Preload",
                    "type": "section",
                    "key": "works.creativecode.pyls.PreloadSec",
                    "children": [
                        {
                            "key": "pyls.plugins.preload.modules",
                            "type": "string",
                            "title": "Startup Import",
                            "default": null,
                            "description": "List of modules to import on startup (Comma separated paths)"
                        }
                    ]
                },
                {
                    "title": "PyCodeStyle",
                    "type": "section",
                    "key": "works.creativecode.pyls.PycodestyleSec",
                    "children": [
                        {
                            "key": "pyls.plugins.pycodestyle.exclude",
                            "type": "string",
                            "title": "Exclude Files/Directories",
                            "description": "Exclude files or directories which match these patterns. (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pycodestyle.filename",
                            "title": "Filenames to include",
                            "type": "string",
                            "default": null,
                            "description": "When parsing directories, only check filenames matching these patterns. (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pycodestyle.select",
                            "title": "Warnings/Error Codes to Select",
                            "type": "string",
                            "default": null,
                            "description": "Select errors and warnings (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pycodestyle.ignore",
                            "type": "string",
                            "title": "Warnings/Error Codes to Ignore",
                            "default": null,
                            "description": "Ignore errors and warnings (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pycodestyle.hangClosing",
                            "type": "boolean",
                            "title": "Hang closing bracket",
                            "default": null,
                            "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                        },
                        {
                            "key": "pyls.plugins.pycodestyle.maxLineLength",
                            "type": "number",
                            "title": "Maximum Line Length",
                            "default": 79,
                            "description": "Set maximum allowed line length."
                        }
                    ]
                },
                {
                    "title": "PyDocStyle",
                    "type": "section",
                    "key": "works.creativecode.pyls.PydocstyleSec",
                    "children": [
                        {
                            "key": "pyls.plugins.pydocstyle.convention",
                            "type": "enum",
                            "title": "Convention",
                            "default": null,
                            "values": [
                                "pep257",
                                "numpy"
                            ],
                            "description": "Choose the basic list of checked errors by specifying an existing convention."
                        },
                        {
                            "key": "pyls.plugins.pydocstyle.addIgnore",
                            "type": "string",
                            "title": "Additionally Ignore Errors/Warnings",
                            "default": null,
                            "description": "Ignore errors and warnings in addition to the specified convention. (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pydocstyle.addSelect",
                            "type": "string",
                            "title": "Additionally Select Errors/Warnings",
                            "default": null,
                            "description": "Select errors and warnings in addition to the specified convention. (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pydocstyle.ignore",
                            "type": "string",
                            "title": "Ignore errors and warnings",
                            "default": null,
                            "description": "Ignore PyDocStyle errors and warnings (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pydocstyle.select",
                            "type": "string",
                            "default": null,
                            "title": "Select errors and warnings",
                            "description": "Select PyDocStyle errors and warnings (Comma separated values)"
                        },
                        {
                            "key": "pyls.plugins.pydocstyle.match",
                            "type": "string",
                            "title": "Match Files",
                            "default": "(?!test_).*\\.py",
                            "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                        },
                        {
                            "key": "pyls.plugins.pydocstyle.matchDir",
                            "type": "string",
                            "title": "Match Directories",
                            "default": "[^\\.].*",
                            "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                        }
                    ]
                },
                {
                    "title": "PyLint",
                    "type": "section",
                    "key": "works.creativecode.pylint.pylintSec",
                    "children": [
                        {
                            "key": "pyls.plugins.pylint.args",
                            "type": "string",
                            "title": "Arguments",
                            "default": null,
                            "description": "Arguments to pass to pylint."
                        },
                        {
                            "key": "pyls.plugins.pylint.executable",
                            "type": "path",
                            "title": "Executable Path",
                            "default": null,
                            "description": "Executable to run pylint with. Enabling this will run pylint on unsaved files via stdin. Can slow down workflow. Only works with python3."
                        }
                    ]
                },
                {
                    "title": "Rope",
                    "type": "section",
                    "key": "works.creativecode.pylint.ropeCat",
                    "children": [
                        {
                            "key": "pyls.rope.ropeFolder",
                            "title": "Rope Folder",
                            "type": "path",
                            "default": null,
                            "description": "The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all."
                        },
                        {
                            "key": "pyls.rope.extensionModules", 
                            "type": "string",
                            "title": "Extension Modules",
                            "default": null,
                            "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
                        }
                    ]
                }
            ]
        },
        {
            "title": "Plugin Options",
            "description": "Options for PyLS plugins.",
            "type": "section",
            "key": "works.creativecode.pylint.plugin",
            "children": [
                {
                    "title": "MyPy",
                    "type": "section",
                    "description": "Enable after installing using → pip3 install pyls-mypy",
                    "key": "works.creativecode.pyls.mypyPluginSec",
                    "children": [
                        {
                            
                            "key": "pyls.plugins.pyls_mypy.enabled",
                            "type": "boolean",
                            "title": "Enable MyPy",
                            "default": false,
                            "description": "Enable or disable the MyPy PyLS plugin."
                        },
                        {
                            
                            "key": "pyls.plugins.pyls_mypy.live_mode",
                            "type": "boolean",
                            "title": "Enable Live Mode",
                            "default": false,
                            "description": "Enable or disable Live Mode"
                        }
                    ]
                },
                {
                "title": "iSort",
                "type": "section",
                "description": "Enable after installing using → pip3 install pyls-isort",
                "key": "works.creativecode.pyls.isortPluginSec",
                "children": [
                    {
                        
                        "key": "pyls.plugins.pyls_isort.enabled",
                        "type": "boolean",
                        "title": "Enable iSort",
                        "default": false,
                        "description": "Enable or disable the iSort PyLS plugin."
                    }]},
                {
                "title": "Black",
                "type": "section",
                "description": "Enable after installing using → pip3 install pyls-black",
                "key": "works.creativecode.mypy.mypyPluginSec",
                "children": [
                    {
                        
                        "key": "pyls.plugins.pyls_black.enabled",
                        "type": "boolean",
                        "title": "Enable Black",
                        "default": false,
                        "description": "Enable or disable the Black PyLS plugin."
                    }]}
            ]
        }
    ]
}
