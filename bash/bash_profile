###################################################################
# Script Name    : bash_profile
# Description    : DE's bash_profile
# Args           : None
# Author         : Doug Emery
# Email          : hummus.augment_0r@icloud.com
###################################################################
export EDITOR="/usr/bin/vim"
export HISTCONTROL=ignoredups:erasedups
export HISTFILESIZE=1000000
export HISTSIZE=1000000

HOMEBREW_PREFIX=$( [[ -e /opt/homebrew ]] && echo /opt/homebrew || echo /usr/local )

if [ -e HOME/Java/apache-jena-fuseki-4.8.0 ]
then
  export FUSEKI_HOME=$HOME/Java/apache-jena-fuseki-4.8.0
fi

if [ -e $HOME/Java/apache-jena-4.8.0 ]
then
  export JENA_HOME=$HOME/Java/apache-jena-4.8.0
fi
[[ -e /opt/homebrew/opt/openjdk ]] && export JAVA_HOME=/opt/homebrew/opt/openjdk

##
# Determine whether path exists and isn't already in $PATH.
add_path() {
  # exit 1 if the path doesn't exist
  [[ -e "${1}" ]] || return 1

  # exit 1 if the path is already in path
  grep -q "^${1}$" <(echo "$(tr ':' '\n' <<< $PATH)") && return 1

  return 0
}

# add these paths to the end of $PATH
postfix_paths="
/usr/local/bin
/usr/local/sbin
${FUSEKI_HOME}
${FUSEKI_HOME}/bin
${JENA_HOME}/bin
"

for p in ${postfix_paths}
do
  add_path ${p} && PATH=${PATH}:${p}
done

# prepend these paths to $PATH
prefix_paths="
${HOMEBREW_PREFIX}/bin
${HOMEBREW_PREFIX}/opt/openjdk/bin
${HOME}/.local/bin
${HOME}/bin
${HOME}/scripts
"
for p in ${prefix_paths}
do
  add_path ${p} && PATH=${p}:${PATH}
done

[[ -e /Applications/MongoDB.app ]] && PATH="/Applications/MongoDB.app/Contents/Resources/Vendor/mongodb/bin:$PATH"

[[ -e /opt/homebrew/opt/mysql@5.7/bin ]] &&  PATH="/opt/homebrew/opt/mysql@5.7/bin:$PATH"
export PATH

##
# directory aliases
##
alias dsc="cd $HOME/code/digital-scriptorium/ds-convert"
alias dsch="cd $HOME/code/digital-scriptorium/ds-schema"
alias dsi="cd $HOME/code/digital-scriptorium/ds-import"
alias dsng="cd $HOME/code/digital-scriptorium/ds-number-generator"
alias dsp="cd $HOME/code/digital-scriptorium/digital-scriptorium-prototype"
alias dss="cd $HOME/code/digital-scriptorium/ds-search"
alias dssd="cd $HOME/code/digital-scriptorium/ds-search-deployment"
alias dsx="cd $HOME/code/digital-scriptorium/ds-exports-2"
alias jnl="cd $HOME/code/demery/journal-indexer"
alias openn="cd $HOME/code/openn/openn"
alias vce="cd $HOME/code/VisColl/VisualCollation"
# print ISO formatted date time
alias idate="date +%FT%T%z"
##
if [[ -f "$HOME/.amazon_keys" ]]; then
  source "$HOME/.amazon_keys";
fi

if [[ -f "$HOME/.opennrc" ]]; then
  source "$HOME/.opennrc"
fi
##
# if [ -d $HOME/.secrets ]; then
#    for file in $HOME/.secrets/*
#    do
#        if [ -s $file ]; then
#           source $file
#        fi
#    done
# fi
##
###############################################################################
# iTerm2 stuff
##
# Thos the hostname in the iterm2 window bar.
# $1 = type; 0 - both, 1 - tab, 2 - title
# rest = text
setTerminalText () {
    # echo works in bash & zsh
    local mode=$1 ; shift
    echo -ne "\033]$mode;$@\007"
}
stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }
##
stt_both $(hostname)
### end iTerm2 stuff
###############################################################################

##
# Rbenv
if which -s rbenv
then
  eval "$(rbenv init -)"
else
  echo "WARNING: rbenv not found"
fi

##
# Bash completion
[[ -r "$HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh" ]] && . "$HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh"


##
if [[ -f $HOME/.ansible-vault-sdbm ]]; then
  source "$HOME/.ansible-vault-sdbm"
fi
##
# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac
##
PYENV_ROOT="$HOME/.pyenv"
if [[ -e $PYENV_ROOT ]]
then
  export PYENV_ROOT
  export PATH="$PYENV_ROOT/shims:$PATH"
  eval "$(pyenv init -)"
fi
##
# If not running interactively, don't do anything
case $- in
  *i*) ;;
    *) return;;
esac
##
# Path to the bash it configuration
export BASH_IT="${HOME}/.bash_it"
##
# Lock and Load a custom theme file.
# Leave empty to disable theming.
# location /.bash_it/themes/
export BASH_IT_THEME='bobby'
##
# Some themes can show whether `sudo` has a current token or not.
# Set `$THEME_CHECK_SUDO` to `true` to check every prompt:
THEME_CHECK_SUDO='true'
##
# (Advanced): Change this to the name of your remote repo if you
# cloned bash-it with a remote other than origin such as `bash-it`.
# export BASH_IT_REMOTE='bash-it'
##
# (Advanced): Change this to the name of the main development branch if
# you renamed it or if it was changed for some reason
# export BASH_IT_DEVELOPMENT_BRANCH='master'
##
# Your place for hosting Git repos. I use this for private repos.
# export GIT_HOSTING='git@git.domain.com'
##
# Don't check mail when opening terminal.
unset MAILCHECK
##
# Change this to your console based IRC client of choice.
export IRC_CLIENT='irssi'
##
# Set this to the command you use for todo.txt-cli
export TODO="t"
##
# Set this to the location of your work or project folders
#BASH_IT_PROJECT_PATHS="${HOME}/Projects:/Volumes/work/src"
##
# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true
# Set to actual location of gitstatus directory if installed
#export SCM_GIT_GITSTATUS_DIR="$HOME/gitstatus"
# per default gitstatus uses 2 times as many threads as CPU cores, you can change this here if you must
#export GITSTATUS_NUM_THREADS=8
##
# Set Xterm/screen/Tmux title with only a short hostname.
# Uncomment this (or set SHORT_HOSTNAME to something else),
# Will otherwise fall back on $HOSTNAME.
#export SHORT_HOSTNAME=$(hostname -s)
##
# Set Xterm/screen/Tmux title with only a short username.
# Uncomment this (or set SHORT_USER to something else),
# Will otherwise fall back on $USER.
#export SHORT_USER=${USER:0:8}
##
# If your theme use command duration, uncomment this to
# enable display of last command duration.
#export BASH_IT_COMMAND_DURATION=true
# You can choose the minimum time in seconds before
# command duration is displayed.
#export COMMAND_DURATION_MIN_SECONDS=1
##
# Set Xterm/screen/Tmux title with shortened command and directory.
# Uncomment this to set.
#export SHORT_TERM_LINE=true
##
# Set vcprompt executable path for scm advance info in prompt (demula theme)
# https://github.com/djl/vcprompt
#export VCPROMPT_EXECUTABLE=~/.vcprompt/bin/vcprompt
##
# (Advanced): Uncomment this to make Bash-it reload itself automatically
# after enabling or disabling aliases, plugins, and completions.
# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1
##
# Uncomment this to make Bash-it create alias reload.
# export BASH_IT_RELOAD_LEGACY=1
##
# Load Bash It
source "$BASH_IT"/bash_it.sh

feature_branch() {
  fb_number=$1
  fb_name="${@:2}" # get the rest of the arguments

  fb_normal_name=$(sed 's/[^A-Za-z0-9_-][^A-Za-z0-9_-]*/-/g' <<< "${fb_name}" | tr 'A-Z' 'a-z')
  echo "${fb_number}-${fb_normal_name}"
}

##
# Add aliases after bash_it loads so they don't get stepped on
# command aliases
alias l="ls -F"
alias ll="l -lh"
alias lal="ll -a"
alias lll=lal
alias lt="ll -t"
alias lrt="lt -r" # time modified; ascending order
alias lsd="ls -d"
alias llsd="ll -d"

alias gi="gem install --no-rdoc --no-ri"
alias openx="open -a \"Microsoft Excel\""
alias sxp=strip_xpath
alias vish="vim -c 'set ft=sh'"
alias vivid="vim -c 'colorscheme vividchalk'"
alias wl="wc -l"
alias femacs="emacs --no-init-file"
alias rubymine="open -a RubyMine"
alias subl='open -a "Sublime Text"'
alias tstamp='date +%Y%m%dT%H%M%S-%Z'
